import telebot
from telebot import types
import datetime
import db
import config
bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    markup = types.InlineKeyboardMarkup()
    login = types.InlineKeyboardButton(text='–í—Ö–æ–¥', callback_data=f"{'login'}")
    markup.add(login)
    bot.send_message(message.chat.id, 'üëã–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Çüëã \nüîç–î–∞–≤–∞–π –ø—Ä–æ–π–¥—ë–º –∞—É–Ω—Ç–µ—Ñ–∏–∫–∞—Ü–∏—éüîé\n‚ùï‚ùï', reply_markup=markup)




def login (message):
    try:
        if db.CheckLogin(message.text)=='Yes':
            id_tg = message.from_user.id
            if db.CheckEnterLogin(id_tg) == 'No':
                db.EnterLogin(id_tg,message.text)
            if db.CheckEnterLogin(id_tg) == 'Yes':
                db.EnterLogin2(id_tg, message.text)


            mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
            bot.register_next_step_handler(mesg, password)
        if db.CheckLogin(message.text)=='No':
            mesg = bot.send_message(message.chat.id, '–õ–æ–≥–∏–Ωa –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
            bot.register_next_step_handler(mesg, login)
    except Exception as ex:
        print(1)
        print (ex)

def password(message):
    try:
        id_tg = message.from_user.id
        if db.check_password(id_tg, message.text) == 'Yes':
            id_tg = message.from_user.id
            if db.Check_Role(id_tg) == 'admin':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                database = types.KeyboardButton('–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
                news = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                offers = types.KeyboardButton('–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –†–µ–∫—Ç–æ—Ä—É')
                newnews = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å')
                markup.add(database, news, offers,newnews)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', reply_markup=markup)
            if db.Check_Role(id_tg) == 'teacher':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—è', reply_markup=markup)
            if db.Check_Role(id_tg) == 'decanat':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –¥–µ–∫–∞–Ω–∞—Ç–∞', reply_markup=markup)
            if db.Check_Role(id_tg) == 'student':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞', reply_markup=markup)
            if db.Check_Role(id_tg) == 'rector':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Ä–µ–∫—Ç–æ—Ä–∞', reply_markup=markup)
            if db.Check_Role(id_tg) == 'profcom':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∫–æ–º–∞', reply_markup=markup)
            if db.Check_Role(id_tg) == 'studsovet':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
                markup.add(new)
                bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Å—Ç—É–¥—Å–æ–≤–µ—Ç–∞', reply_markup=markup)
        if db.check_password(id_tg,message.text) == 'No':
            mess = bot.send_message(message.chat.id,'–ù–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä–æ–ª—å , –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑')
            bot.register_next_step_handler(mess,password)
    except Exception as ex:
        print(2)
        print(ex)

def newnew(message):
    try:
        for i in db.all_user_db():
            bot.send_message(i['id_tg'],f"!!!–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ!!!\n{message.text}")
        bot.send_message(message.chat.id, "–†–∞—Å—Å–ª—ã–∫–∞ —Å–¥–µ–ª–∞–Ω–∞")
        print(123)
    except Exception as ex:
        print(1)
        print (ex)


@bot.callback_query_handler(func=lambda callback: callback.data)
def check_callback(callback):
    if callback.data == "login":
        mesg = bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω')
        bot.register_next_step_handler(mesg, login)

@bot.message_handler(content_types=['text'])
def func(message):
    ######## MENU #########
    if (message.text == "–ú–µ–Ω—é"):
        id_tg = message.from_user.id
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            database = types.KeyboardButton('–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
            news = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            offers = types.KeyboardButton('–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –†–µ–∫—Ç–æ—Ä—É')
            newnews = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å')
            markup.add(database, news, offers, newnews)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', reply_markup=markup)
        if db.Check_Role(id_tg) == 'teacher':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—è', reply_markup=markup)
        if db.Check_Role(id_tg) == 'decanat':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –¥–µ–∫–∞–Ω–∞—Ç–∞', reply_markup=markup)
        if db.Check_Role(id_tg) == 'student':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞', reply_markup=markup)
        if db.Check_Role(id_tg) == 'rector':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Ä–µ–∫—Ç–æ—Ä–∞', reply_markup=markup)
        if db.Check_Role(id_tg) == 'profcom':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∫–æ–º–∞', reply_markup=markup)
        if db.Check_Role(id_tg) == 'studsovet':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            new = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
            markup.add(new)
            bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Å—Ç—É–¥—Å–æ–≤–µ—Ç–∞', reply_markup=markup)
    ######## MENU #########
    ######## –û–ë–©–ï–ï #########
    if (message.text == "–ù–æ–≤–æ—Å—Ç–∏"):
        id_tg = message.from_user.id
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        database = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∫–æ–º–∞')
        news = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ –¥–µ–∫–∞–Ω–∞—Ç–∞')
        offers = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ —Å—Ç—É–¥.—Å–æ–≤–µ—Ç–∞')
        menu = types.KeyboardButton('–ú–µ–Ω—é')
        markup.add(database, news, offers)
        markup.add(menu)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é', reply_markup=markup)
    if (message.text == '–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∫–æ–º–∞'):
        all_new = db.news('profcom')
        msg = ''
        a = 1
        for i in all_new:
            msg = msg + f"{a} : {i['about']}\n–î–∞—Ç–∞ : {i['data']}\n"
        bot.send_message(message.chat.id, msg)
    if (message.text == '–ù–æ–≤–æ—Å—Ç–∏ –¥–µ–∫–∞–Ω–∞—Ç–∞'):
        all_new = db.news('decanat')
        msg = ''
        a = 1
        for i in all_new:
            msg = msg + f"{a} : {i['about']}\n–î–∞—Ç–∞ : {i['data']}\n"
        bot.send_message(message.chat.id, msg)
    if (message.text == '–ù–æ–≤–æ—Å—Ç–∏ —Å—Ç—É–¥.—Å–æ–≤–µ—Ç–∞'):
        all_new = db.news('studsovet')
        msg = ''
        a = 1
        for i in all_new:
            msg = msg + f"{a} : {i['about']}\n–î–∞—Ç–∞ : {i['data']}\n"
        bot.send_message(message.chat.id, msg)
    ######## –û–ë–©–ï–ï #########

    ####### ADMIN BLOCK ######
    if (message.text == "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            admins = types.KeyboardButton('–í—Å–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã')
            teachers = types.KeyboardButton('–í—Å–µ –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª–∏')
            users = types.KeyboardButton('–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã')
            menu = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(admins, teachers, users, menu)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=markup)
        else :
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')
    if (message.text == "–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã"):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            all_user = db.all_user('student')
            a = 1
            msg = ''
            for i in all_user:
                msg =msg + f"{a}:{i}\n"
                a = a + 1
            bot.send_message(message.chat.id, msg)
        else :
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')
    if (message.text == "–í—Å–µ –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª–∏"):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            all_user = db.all_user('teacher')
            a = 1
            msg = ''
            for i in all_user:
                msg =msg + f"{a}:{i}\n"
                a = a + 1
            bot.send_message(message.chat.id, msg)
        else :
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')
    if (message.text == "–í—Å–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            all_user = db.all_user('admin')
            a = 1
            msg = ''
            for i in all_user:
                msg =msg + f"{a}:{i}\n"
                a = a + 1
            bot.send_message(message.chat.id, msg)
        else :
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')
    if (message.text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å'):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin':
            mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è , –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è')
            bot.register_next_step_handler(mesg, newnew)
            print(321)

        else:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')


    ####### ADMIN BLOCK ######

    if (message.text == "–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –†–µ–∫—Ç–æ—Ä—É"):
        id_tg = message.from_user.id
        if db.Check_Role(id_tg) == 'admin' or 'rector':
            msg = ''
            a = 1
            for i in db.all_offers():
                msg = msg + f"{a}: {i['login']}\n–û–±—Ä–∞—â–µ–Ω–∏–µ: {i['offer']}\n"
                a = a + 1
            bot.send_message(message.chat.id, msg)
        else :
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ (')

    ####### ADMIN BLOCK ######

if __name__ == '__main__':
    print('bot rolling')
    bot.polling(none_stop=True)